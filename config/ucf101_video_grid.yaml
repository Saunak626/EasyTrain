# UCF-101视频分类网格搜索配置
# 用于搜索最佳的视频模型和超参数组合

# 任务配置
task:
  tag: "video_classification"
  description: "UCF-101视频分类网格搜索"

# 训练配置
training:
  exp_name: "ucf101_grid_exp"
  save_model: true
  model_save_path: "models/video_model.pth"

# SwanLab配置
swanlab:
  project_name: "EasyTrain-Video-Grid"
  description: "UCF-101视频分类网格搜索实验"

# 数据配置
data:
  type: ucf101_video  # 使用新的视频帧数据集类型
  root: data/ucf101   # 数据集根目录
  num_workers: 12      # 数据加载工作进程数
  params:
    clip_len: 16      # 每个视频片段的帧数

# 模型配置（仅保留必要的基础参数）
model:
  params:
    num_classes: 101  # UCF-101有101个动作类别

# 超参数配置（基础默认值，可被网格搜索和命令行覆盖）
hp:
  epochs: 5         # 训练轮数（固定值，不参与网格搜索）
  # data_percentage 由命令行参数控制，不在此设置默认值

# GPU配置
gpu:
  device_ids: "2,3"
  auto_select: true

# 多卡训练配置
multi_gpu:
  enabled: true
  strategy: "ddp"

# 模型选择配置
models_to_train:
  # 启用要训练的模型列表，注释掉不需要训练的模型
  # - "r3d_18"
  # - "mc3_18"
  # - "r2plus1d_18"
  - "s3d"
  - "mvit_v1_b"
  - "mvit_v2_s"
  - "swin3d_b"
  - "swin3d_s"
  - "swin3d_t"
  # 可选的其他模型（当前已注释）

# 网格搜索设置
max_experiments: 20
continue_on_error: true
parallel_jobs: 1
save_results: true
results_file: "video_grid_search_results.csv"

# 网格搜索超参数
grid_search:
  grid:
    # 模型相关参数（主要搜索内容）
    model.type: [
      "r3d_18", "mc3_18", "r2plus1d_18", 
      "s3d", "mvit_v1_b", "mvit_v2_s",
      "swin3d_b", "swin3d_s", "swin3d_t"
    ]

    hp.batch_size: [
    128, 128, 128,
    128, 36, 32, 
    16, 16, 16]

    # batch_size支持两种模式：
    # 1. 单一值：所有模型使用相同的batch_size，如 [128]
    # 2. 对应数组：与model.type数量相同，按顺序对应每个模型的batch_size
    # 根据模型复杂度和内存需求优化的batch_size配置：

    # model.type: [
    #   "s3d", "mvit_v1_b", "mvit_v2_s",
    #   "swin3d_b", "swin3d_s", "swin3d_t"
    # ] 

    # hp.batch_size: [128, 36, 32, 16, 16, 16]

    # 超参数
    hp.learning_rate: [0.001]
    
    # 优化器参数
    optimizer.name: ["adam"]
    optimizer.params.weight_decay: [0.0001]
    
    # 调度器参数
    scheduler.name: ["cosine"]
    
    # 损失函数
    loss.name: ["crossentropy"]