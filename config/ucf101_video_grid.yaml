# UCF-101视频分类网格搜索配置
# 用于搜索最佳的视频模型和超参数组合

# 训练配置
training:
  experiment_name: "ucf101_grid_exp"
  save_model: true
  model_save_path: "models/video_model.pth"

# SwanLab配置
swanlab:
  project_name: "EasyTrain-Video-Grid"
  description: "UCF-101视频分类网格搜索实验"

# 数据配置
data:
  type: ucf101_video  # 使用新的视频帧数据集类型
  root: data/ucf101   # 数据集根目录
  num_workers: 12      # 数据加载工作进程数
  params:
    clip_len: 16      # 每个视频片段的帧数

# 模型配置（基础配置，会被网格搜索覆盖）
model:
  type: r3d_18        # 默认使用3D ResNet-18模型
  params:
    num_classes: 101  # UCF-101有101个动作类别

# 超参数配置（基础配置，会被网格搜索覆盖）
hyperparameters:
  batch_size: 128      # 批大小
  learning_rate: 0.001 # 学习率
  epochs: 10          # 训练轮数

# 优化器配置（基础配置，会被网格搜索覆盖）
optimizer:
  name: adam          # 使用Adam优化器
  params:
    weight_decay: 0.0001 # 权重衰减

# 学习率调度器配置（基础配置，会被网格搜索覆盖）
scheduler:
  name: cosine        # 使用余弦退火调度器
  params:
    T_max: 50         # 最大轮数
    eta_min: 0.00001  # 最小学习率

# 损失函数配置（基础配置，会被网格搜索覆盖）
loss:
  name: crossentropy  # 交叉熵损失

# GPU配置
gpu:
  device_ids: "2,3"
  auto_select: true

# 多卡训练配置
multi_gpu:
  enabled: true
  strategy: "ddp"

# 网格搜索设置
max_experiments: 20
continue_on_error: true
parallel_jobs: 1
save_results: true
results_file: "video_grid_search_results.csv"

# 网格搜索超参数
grid_search:
  grid:
    # 模型相关参数（主要搜索内容）
    model.type: ["r3d_18", "mc3_18", "r2plus1d_18"]
    
    # 超参数
    hyperparameters.learning_rate: [0.001]
    hyperparameters.batch_size: [256]
    hyperparameters.epochs: [3]
    
    # 优化器参数
    optimizer.name: ["adam"]
    optimizer.params.weight_decay: [0.0001]
    
    # 调度器参数
    scheduler.name: ["cosine"]
    
    # 损失函数
    loss.name: ["crossentropy"]