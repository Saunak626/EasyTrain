
# 基础配置模板
# 用于指导自定义修改，包含所有可配置选项和详细说明

# 超参数配置 - 控制模型训练的核心参数
hyperparameters:
  learning_rate: 0.001    # 学习率：控制模型参数更新的步长
  batch_size: 256         # 批大小：每次训练处理的样本数量
  epochs: 3               # 训练轮数：完整遍历训练数据的次数
  dropout: 0.1            # Dropout比例：防止过拟合的正则化参数

# 训练配置 - 控制实验执行和结果保存
training:
  experiment_name: "custom_exp"           # 实验名称：用于标识不同的训练实验
  save_model: true                        # 是否保存模型权重文件
  model_save_path: "models/model.pth"     # 模型保存路径：保存训练好的模型

# SwanLab配置 - 实验追踪和可视化
swanlab:
  project_name: "training_framework"      # 项目名称：SwanLab中的项目标识
  description: "深度学习训练实验"          # 实验描述：记录实验目的和特征

# 数据配置 - 控制数据加载和预处理
data:
  type: "cifar10"                         # 数据集类型：支持cifar10, custom

  # CIFAR-10配置（当type为cifar10时使用）
  root: "./data"                          # CIFAR-10数据根目录：存放训练和测试数据
  download: true                          # 是否自动下载CIFAR-10数据集
  augment: true                           # 是否使用数据增强：提高模型泛化能力
  num_workers: 4                          # 数据加载进程数：影响数据加载速度

  # 自定义数据集配置（当type为custom时使用）
  data_dir: "./data/raw/custom_dataset"   # 自定义数据集目录：存放图像数据
  csv_file: null                          # CSV文件路径：包含标签信息的文件（可选）
  image_size: 224                         # 图像大小：调整到统一尺寸
  train_split: 0.8                        # 训练集比例：划分训练和测试集

# GPU配置 - 控制训练设备选择
gpu:
  device_ids: "2,3"                       # GPU设备ID：指定使用的GPU卡号，如"0,1"或"2,3"
  auto_select: true                       # 是否自动选择可用GPU：为True时自动检测可用GPU

# 模型配置 - 控制神经网络架构
model:
  type: "resnet18"                        # 模型类型：支持resnet18, resnet50, efficientnet_b0, mobilenet_v2, densenet121
  params: {}                              # 模型参数：传递给模型构造函数的额外参数

# 损失函数配置 - 控制模型优化目标
loss:
  type: "cross_entropy"                   # 损失函数类型：支持cross_entropy, focal_loss, label_smoothing, mse
  params: {}                              # 损失函数参数：如alpha, gamma, num_classes等

# 优化器配置 - 控制参数更新策略
optimizer:
  type: "adam"                            # 优化器类型：支持adam, adamw, sgd
  params:
    weight_decay: 0                       # 权重衰减：L2正则化系数，防止过拟合

# 学习率调度器配置 - 控制学习率变化策略
scheduler:
  type: "onecycle"                        # 调度器类型：支持onecycle, step, cosine, plateau
  params:
    step_size: 10                         # StepLR步长：每次更新学习率的间隔轮数
    gamma: 0.1                            # StepLR衰减率：学习率衰减的倍数